import smtplib
from config import EMAIL, SERVER

BASE_TEMPLATE = """From: %(sender)s
To: %(receivers)s
Subject: [OOI-RUIG] %(subject)s (%(server)s)

This email notification has been automatically generated by the ingestion script on %(server)s.

%(message)s
"""

INGESTION_COMPLETE_TEMPLATE = """
The ingestion for %(ingestion_source)s has completed. The ingestion was run with the following options:
%(options)s
"""

mailer = smtplib.SMTP(EMAIL['server'])
def send(subject, message):
    mailer.sendmail(
        EMAIL['sender'],
        EMAIL['receivers'],
        BASE_TEMPLATE % {
            'sender': EMAIL['sender'],
            'receivers': ", ".join(EMAIL['receivers']),
            'subject': subject,
            'message': message,
            'server': SERVER
            }
        )

def verbose_options(options):
    ''' Verbose listing of the options set. '''
    v_options = []
    if options['test_mode']:
        v_options.append("Test mode is enabled.")
    if options['force_mode']:
        v_options.append("Force mode is enabled.")
    if options['commands_only']:
        v_options.append("Commands-only mode is enabled.")
    v_options.append("Sleep timer is set to %s seconds." % options['sleep_timer'])
    if options['max_file_age']:
        v_options.append("Maximum file age is set to %s seconds." % options['max_file_age'])
    if options['start_date']:
        v_options.append("Start date is set to %s" % options['start_date'].strftime("%Y-%m-%d"))
    if options['end_date']:
        v_options.append("End date is set to %s" % options['end_date'].strftime("%Y-%m-%d"))
    v_options.append("EDEX service cooldown set to %s seconds." % options['cooldown'])
    if options['quick_look_quantity']:
        v_options.append("Quick look quantity set to %s." % options['quick_look_quantity'])
    return "\n".join(v_options)

def ingestion_completed(ingestion_source, options):
    send("Auto-Notification: Ingestion Completed",
        INGESTION_COMPLETE_TEMPLATE % {
            'server': SERVER,
            'ingestion_source': ingestion_source,
            'options': verbose_options(options),
            }, 
        )

def options_summary(options):
    send("Auto-Notification: Options Summary", 
        verbose_options(options),
        )
